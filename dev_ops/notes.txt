 - SSH passphrase: pinkmartini


# see tensorboard events file
conda install tensorboard
# copy log files to local
gcloud compute scp --recurse dzubke@instance-9:~/awni_speech/speech/examples/timit/models/ctc_best/ /Users/dustin/CS/consulting/firstlayerai/phoneme_classification/src/awni_speech/speech/examples/timit/models/GCP_ctc_best
tensorboard --logdir ./  --port=8080

### Notes
###
# 1. If there is an import error where `GLIBCXX_3.4.21' not found
# run the command: conda install -c msarahan libgcc
# which will install libgcc=5.2.0 from https://anaconda.org/msarahan/libgcc which has

#steps for different model size

# Noise inject debug 
ffmpeg -y -i -ar 16000 -f wa



# logging info
logging.basicConfig(filename=None, filemode='w', level=10)
logger = logging.getLogger("train_log")

# data-disk prefix
/mnt/disks/data_disk/


# source: https://www.apoehlmann.com/blog/connecting-tensorboard-your-google-cloud-vm-port-forwarding/
# 1 connect to tensorboard on VM
nohup tensorboard --logdir=models/2021-03-05/ph2/   --port 6006 &> tb.out &

# 2. on local run:
gcloud compute ssh dzubke@phoneme-2 --zone=us-central1-c --project=speak-ml-dev -- -NfL 6002:localhost:6002

# can kill the tunnel on local by look for process here:
ps aux | grep tensorboard

gsutil -m cp -r gs://phoneme-vm-backup/models/ctc_models/20201130/ph4/  examples/librispeech/models/ctc_models/20201029/
# will cache password in memory for 10 days
git config credential.helper 'cache --timeout 864000'

# github password
9!l2&YQCydRAkhr1f6%x

nohup python -m torch.distributed.launch --nproc_per_node=4 --nnodes=1 --node_rank=0 --master_addr="10.128.0.10" --master_port=8888 train.py examples/librispeech/ctc_config_ph4.yaml &> 2020-10-19_large-model-mid-aug_lib-ted-cv-speak-5M-2020-09-25_2020-10-05-06.out &

# how to kill at GPU-related processes
for i in $(sudo lsof /dev/nvidia0 | grep python  | awk '{print $2}' | sort -u); do kill -9 $i; done


# how to assess if linux reboot occured
less /var/log/syslog | grep -n 'Unmounting /mnt/disks/data_disk...'

##  DDP launch commands
python -m torch.distributed.launch --nproc_per_node=2 --nnodes=1 --node_rank=0 train.py examples/librispeech/ctc_config_ph4.yaml

echo $GOOGLE_APPLICATION_CREDENTIALS 

ffmpeg -y -i "$SRC_FILE" -ac 1 -ar 16000 -sample_fmt s16 -f wav "$DST_FILE"


sed 's/\r/\n/g'

python -m torch.distributed.launch --nproc_per_node=1 --nnodes=1 --node_rank=0 --master_addr="10.128.0.32" --master_port=8888 train.py examples/librispeech/ctc_config_ph4.yaml


docker run --rm --gpus all \
  --mount type=bind,\
    source=/mnt/disks/data_disk/home/dzubke/awni_speech/data/,\
    target=/mnt/disks/data_disk/home/dzubke/awni_speech/data/ \
  -it speech bash


python -m torch.distributed.launch --nproc_per_node=1 --nnodes=1 --node_rank=0 train.py ctc_config_ph4.yaml 

200000 24



cat lib-ted-cv-spk/train_lib-ted-cv-speak-250K-2021-01-05_dm.json ./swb/swb-train.json > lib-ted-cv-spk-swb/train_lib-ted-cv-spk250K-swb-2021-01-26_dm.json


sed -i 's#/mnt/disks/data_disk/home/dzubke/awni_speech/data#/mnt/disks/data_master/data#g'

sed -i 's#/home/dzubke/awni_speech/data#/mnt/disks/data_disk/data#g'

sed -i 's#/mnt/disks/data_disk/home/dzubke/awni_speech/data#/mnt/disks/data_disk/data#g' *.json

